// Bun Snapshot v1, https://bun.sh/docs/test/snapshots

exports[`AIGNEClient should return correct process options {
  streaming: true,
} for express server 1`] = `
[
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello ",
      },
      "text": {
        "message": " ",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world",
      },
      "text": {
        "message": "world",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world!",
      },
      "text": {
        "message": "!",
      },
    },
  },
]
`;

exports[`AIGNEClient should return correct process options {
  streaming: true,
  returnProgressChunks: true,
} for express server 1`] = `
[
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "message": "hello",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "messages": [
          {
            "content": "hello",
            "role": "user",
          },
        ],
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello ",
      },
      "text": {
        "message": " ",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentSucceed",
      "output": {
        "text": "Hello world!",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world",
      },
      "text": {
        "message": "world",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentSucceed",
      "output": {
        "message": "Hello world!",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world!",
      },
      "text": {
        "message": "!",
      },
    },
  },
]
`;

exports[`AIGNEClient should return correct process options {
  streaming: false,
} for express server 1`] = `
{
  "message": "Hello world!",
}
`;

exports[`AIGNEClient should return correct process options {
  streaming: true,
} for express (with json middleware) server 1`] = `
[
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello ",
      },
      "text": {
        "message": " ",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world",
      },
      "text": {
        "message": "world",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world!",
      },
      "text": {
        "message": "!",
      },
    },
  },
]
`;

exports[`AIGNEClient should return correct process options {
  streaming: true,
  returnProgressChunks: true,
} for express (with json middleware) server 1`] = `
[
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "message": "hello",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "messages": [
          {
            "content": "hello",
            "role": "user",
          },
        ],
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello ",
      },
      "text": {
        "message": " ",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentSucceed",
      "output": {
        "text": "Hello world!",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world",
      },
      "text": {
        "message": "world",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentSucceed",
      "output": {
        "message": "Hello world!",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world!",
      },
      "text": {
        "message": "!",
      },
    },
  },
]
`;

exports[`AIGNEClient should return correct process options {
  streaming: false,
} for express (with json middleware) server 1`] = `
{
  "message": "Hello world!",
}
`;

exports[`AIGNEClient should return correct process options {
  streaming: true,
} for express (with compression middleware) server 1`] = `
[
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello ",
      },
      "text": {
        "message": " ",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world",
      },
      "text": {
        "message": "world",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world!",
      },
      "text": {
        "message": "!",
      },
    },
  },
]
`;

exports[`AIGNEClient should return correct process options {
  streaming: true,
  returnProgressChunks: true,
} for express (with compression middleware) server 1`] = `
[
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "message": "hello",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "messages": [
          {
            "content": "hello",
            "role": "user",
          },
        ],
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello ",
      },
      "text": {
        "message": " ",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentSucceed",
      "output": {
        "text": "Hello world!",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world",
      },
      "text": {
        "message": "world",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentSucceed",
      "output": {
        "message": "Hello world!",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world!",
      },
      "text": {
        "message": "!",
      },
    },
  },
]
`;

exports[`AIGNEClient should return correct process options {
  streaming: false,
} for express (with compression middleware) server 1`] = `
{
  "message": "Hello world!",
}
`;

exports[`AIGNEClient should return correct process options {
  streaming: true,
} for express (pass body directly) server 1`] = `
[
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello ",
      },
      "text": {
        "message": " ",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world",
      },
      "text": {
        "message": "world",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world!",
      },
      "text": {
        "message": "!",
      },
    },
  },
]
`;

exports[`AIGNEClient should return correct process options {
  streaming: true,
  returnProgressChunks: true,
} for express (pass body directly) server 1`] = `
[
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "message": "hello",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "messages": [
          {
            "content": "hello",
            "role": "user",
          },
        ],
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello ",
      },
      "text": {
        "message": " ",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentSucceed",
      "output": {
        "text": "Hello world!",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world",
      },
      "text": {
        "message": "world",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentSucceed",
      "output": {
        "message": "Hello world!",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world!",
      },
      "text": {
        "message": "!",
      },
    },
  },
]
`;

exports[`AIGNEClient should return correct process options {
  streaming: false,
} for express (pass body directly) server 1`] = `
{
  "message": "Hello world!",
}
`;

exports[`AIGNEClient should return correct process options {
  streaming: true,
} for hono server 1`] = `
[
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello ",
      },
      "text": {
        "message": " ",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world",
      },
      "text": {
        "message": "world",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world!",
      },
      "text": {
        "message": "!",
      },
    },
  },
]
`;

exports[`AIGNEClient should return correct process options {
  streaming: true,
  returnProgressChunks: true,
} for hono server 1`] = `
[
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "message": "hello",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "messages": [
          {
            "content": "hello",
            "role": "user",
          },
        ],
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello ",
      },
      "text": {
        "message": " ",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentSucceed",
      "output": {
        "text": "Hello world!",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world",
      },
      "text": {
        "message": "world",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentSucceed",
      "output": {
        "message": "Hello world!",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello world!",
      },
      "text": {
        "message": "!",
      },
    },
  },
]
`;

exports[`AIGNEClient should return correct process options {
  streaming: false,
} for hono server 1`] = `
{
  "message": "Hello world!",
}
`;

exports[`AIGNEClient should return error with options {
  streaming: true,
} for express server 1`] = `
[
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello, world",
      },
      "text": {
        "message": ", world",
      },
    },
  },
  [Error: test llm model error],
]
`;

exports[`AIGNEClient should return error with options {
  streaming: true,
  returnProgressChunks: true,
} for express server 1`] = `
[
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "message": "hello",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "messages": [
          {
            "content": "hello",
            "role": "user",
          },
        ],
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "error": [Error: test llm model error],
      "event": "agentFailed",
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello, world",
      },
      "text": {
        "message": ", world",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "error": [Error: test llm model error],
      "event": "agentFailed",
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  [Error: test llm model error],
]
`;

exports[`AIGNEClient should return error with options {
  streaming: true,
} for express (with json middleware) server 1`] = `
[
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello, world",
      },
      "text": {
        "message": ", world",
      },
    },
  },
  [Error: test llm model error],
]
`;

exports[`AIGNEClient should return error with options {
  streaming: true,
  returnProgressChunks: true,
} for express (with json middleware) server 1`] = `
[
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "message": "hello",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "messages": [
          {
            "content": "hello",
            "role": "user",
          },
        ],
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "error": [Error: test llm model error],
      "event": "agentFailed",
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello, world",
      },
      "text": {
        "message": ", world",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "error": [Error: test llm model error],
      "event": "agentFailed",
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  [Error: test llm model error],
]
`;

exports[`AIGNEClient should return error with options {
  streaming: true,
} for express (with compression middleware) server 1`] = `
[
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello, world",
      },
      "text": {
        "message": ", world",
      },
    },
  },
  [Error: test llm model error],
]
`;

exports[`AIGNEClient should return error with options {
  streaming: true,
  returnProgressChunks: true,
} for express (with compression middleware) server 1`] = `
[
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "message": "hello",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "messages": [
          {
            "content": "hello",
            "role": "user",
          },
        ],
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "error": [Error: test llm model error],
      "event": "agentFailed",
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello, world",
      },
      "text": {
        "message": ", world",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "error": [Error: test llm model error],
      "event": "agentFailed",
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  [Error: test llm model error],
]
`;

exports[`AIGNEClient should return error with options {
  streaming: true,
} for express (pass body directly) server 1`] = `
[
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello, world",
      },
      "text": {
        "message": ", world",
      },
    },
  },
  [Error: test llm model error],
]
`;

exports[`AIGNEClient should return error with options {
  streaming: true,
  returnProgressChunks: true,
} for express (pass body directly) server 1`] = `
[
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "message": "hello",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "messages": [
          {
            "content": "hello",
            "role": "user",
          },
        ],
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "error": [Error: test llm model error],
      "event": "agentFailed",
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello, world",
      },
      "text": {
        "message": ", world",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "error": [Error: test llm model error],
      "event": "agentFailed",
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  [Error: test llm model error],
]
`;

exports[`AIGNEClient should return error with options {
  streaming: true,
} for hono server 1`] = `
[
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello, world",
      },
      "text": {
        "message": ", world",
      },
    },
  },
  [Error: test llm model error],
]
`;

exports[`AIGNEClient should return error with options {
  streaming: true,
  returnProgressChunks: true,
} for hono server 1`] = `
[
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "message": "hello",
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "event": "agentStarted",
      "input": {
        "messages": [
          {
            "content": "hello",
            "role": "user",
          },
        ],
      },
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "progress": {
      "agent": {
        "name": "OpenAIChatModel",
      },
      "contextId": "TEST_CONTEXT_ID",
      "error": [Error: test llm model error],
      "event": "agentFailed",
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello",
      },
      "text": {
        "message": "Hello",
      },
    },
  },
  {
    "delta": {
      "json": {
        "message": "Hello, world",
      },
      "text": {
        "message": ", world",
      },
    },
  },
  {
    "progress": {
      "agent": {
        "name": "chat",
      },
      "contextId": "TEST_CONTEXT_ID",
      "error": [Error: test llm model error],
      "event": "agentFailed",
      "parentContextId": "TEST_PARENT_CONTEXT_ID",
      "timestamp": 123456,
    },
  },
  [Error: test llm model error],
]
`;

exports[`AIGNEClient should support custom memory for client agent 1`] = `
[
  {
    "content": "{"input":{"message":"Hello, I'm Bob!"},"output":{"message":"Hello Bob, How can I help you?"},"source":"chat"}",
    "createdAt": Any<String>,
    "id": Any<String>,
    "sessionId": null,
    "updatedAt": Any<String>,
  },
]
`;

exports[`AIGNEClient should support custom memory for client agent 2`] = `
[
  {
    "messages": [
      {
        "content": "Hello, I'm Bob!",
        "role": "user",
      },
      {
        "content": "Hello Bob, How can I help you?",
        "role": "agent",
      },
      {
        "content": "My name is?",
        "role": "user",
      },
    ],
    "modelOptions": undefined,
    "responseFormat": undefined,
    "toolChoice": undefined,
    "tools": undefined,
  },
  Anything,
]
`;
